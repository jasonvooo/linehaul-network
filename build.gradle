plugins {
    id 'java'
    id "org.openapi.generator" version "7.11.0"
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    implementation 'org.jgrapht:jgrapht-core:1.5.2'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'jakarta.validation:jakarta.validation-api:3.1.1'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

compileJava.dependsOn "openApiGenerate"

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$rootDir/src/main/resources/openapi.yaml"
    outputDir = "$buildDir/generated"
    apiPackage = "com.example.linehaulnetwork.api"
    modelPackage = "com.example.linehaulnetwork.model"
    configOptions = [
            dateLibrary    : "java8",
            interfaceOnly  : "true",
            useSpringBoot3 : "true",
            openApiNullable: "false",
            useJakartaEe   : "true"
    ]
}

sourceSets {
    main {
        java {
            srcDir "$buildDir/generated/src/main/java"
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
